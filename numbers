#!/usr/bin/env ruby
$: << __dir__ + '/lib'
require 'bundler/inline'
gemfile do
  gem 'activesupport'
  gem 'rake'
  gem 'duplicate'
  gem 'rspec'
end
require 'active_support'
require 'active_support/core_ext'
require 'enumerable_ext'
require 'numbers'

$stdout.sync = true
VALID_NUMBERS = (1..10).to_a + [25, 50, 75, 100].freeze

args = ARGV.flat_map { it.chomp.split(/[\D]/) }.reject(&:blank?).map(&:to_i)
(args.length == 7) or raise "Expected 7 numbers"

numbers = args[0, 6]
numbers.all? { |n|  VALID_NUMBERS.include?(n) } or raise "Invalid numbers"

target = args[-1]
target.in?(100..999) or raise "Invalid target"

puts Numbers::Solver.solutions(target, numbers).unique.first(10)
