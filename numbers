#!/usr/bin/env ruby
$: << __dir__ + '/lib'
require 'bundler/inline'
gemfile do
  gem 'activesupport'
  gem 'rake'
  gem 'duplicate'
  gem 'rspec'
end
require 'active_support'
require 'active_support/core_ext'
require 'enumerable_ext'
require 'numbers'

$stdout.sync = true
VALID_NUMBERS = (1..10).to_a + [25, 50, 75, 100].freeze

numbers = target = nil
loop do
  print "Numbers: " ; numbers = $stdin.gets.chomp.split(/[\D]/).reject(&:blank?).map(&:to_i)
  if numbers.length != 6
    puts "Expected 6 numbers"
  elsif !numbers.all? { |n|  VALID_NUMBERS.include?(n) }
    puts "Invalid numbers"
  else
    break
  end
end

loop do
  print "Target: "  ; target = $stdin.gets.chomp.strip.to_i
  if (target < 100) || (target > 999)
    puts "Invalid target"
  else
    break
  end
end

puts Numbers::Solver.solutions(target, numbers).unique.first(10)
